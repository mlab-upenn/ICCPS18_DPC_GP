% Feature selection code using GPML.
% For Large Office model.
%
% Perform feature selection for the control prediction model
% The idea is to use the ARD squared exponential covariance function for
% various combinations of inputs and lags, then inspect the prediction
% performance and the length scales to select the features.
% The GP structure is ARX.
% For this purpose, we don't need to use too many data points.
% This code uses/bases on the GPDyn toolbox.

%% Load and prepare data
clearvars

dr_timestep = 15;       % The time step in minutes                               
stepsperhour = 60 / dr_timestep;

%% Select training set and model options

% datafname = 'train-ramped2-LargeOffice.mat';
% data_train_type = 'random_uniform_ramped2';

% datafname = 'train-unconstrained-LargeOffice.mat';
% data_train_type = 'random_uniform_unconstrained';

datafname = 'random_LargeOffice_uniform_2ramped_3input_28day_20171003_1922.mat';
data_train_type = 'random_uniform_ramped2';

% datafname = 'doe_LargeOffice_IG_2ramped_3input_21day_20171003_1804.mat';
% data_train_type = 'doe_IG_2ramped';

% datafname = 'random_LargeOffice_prbs_2ramped_3input_28day_20171003_1922.mat';
% data_train_type = 'random_prbs_2ramped';

data_train = load(fullfile('..', 'data', datafname));

number_of_days = 14;
select_training_type = 'uniform';   % 'oed', 'prbs' or 'uniform'
select_constraint_type = 'ramped';   % 'unconstrained' or 'ramped'
select_kernel_type = 'truongiso';      % 'se' or 'truong' or 'truongiso'
select_trainingdays = ['d' num2str(number_of_days)];     % 'd3', 'd4', 'd7', 'd14', 'd21'

postfix = [num2str(number_of_days) 'days_' select_kernel_type 'kernel'];

% Number of data points to use for identification
ident_len = [1, min(length(data_train.TOD), 24*stepsperhour*number_of_days)];
data_train = slice_data(data_train, ident_len);


%% Normalization
% Normalize the data (not all fields)
normalized_fields = {'Ambient', 'ChwSP', 'ClgSP', 'Humidity',  'SupplyAirSP', 'TotalLoad'};
[~, normparams] = normalize_data(data_train, normalized_fields);

% Adjust manually some of the normalization parameters
normparams.Humidity.min = 0;
normparams.Humidity.max = 100;

normparams.ClgSP.min = 23;
normparams.ClgSP.max = 28;

normparams.SupplyAirSP.min = 11;
normparams.SupplyAirSP.max = 15;

normparams.ChwSP.min = 3.7;
normparams.ChwSP.max = 9.7;

% Re-normalize the training dataset
data_train_norm = normalize_data(data_train, normalized_fields, normparams);

%% Test data
% datafname = 'test-unconstrained-LargeOffice';
datafname = 'test-ramped2-LargeOffice';
% datafname = 'test-nominal-LargeOffice';
data_test = load(fullfile('..', 'data', datafname));

% Normalize the data (same as for training)
data_test_norm = normalize_data(data_test, normalized_fields, normparams);


%% Select the features for each type of models

%{
% Template for any new case
model_inputs(1).oed.unconstrained.se.d3 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};
%}

%{
model_inputs(1).oed.unconstrained.se.d3 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).oed.unconstrained.se.d4 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).oed.unconstrained.se.d7 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).oed.unconstrained.se.d14 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).oed.unconstrained.truong.d3 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).oed.unconstrained.truong.d4 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).oed.unconstrained.truong.d7 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).oed.unconstrained.truong.d14 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).oed.ramped.se.d3 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).oed.ramped.se.d4 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


% model_inputs(1).oed.ramped.se.d7 = {...
%     'TOD', 'DOW', ...
%     {'Ambient', [3 1 0]}, ...
%     {'Humidity', [2 0]}, ...
%     {'TotalLoad', [3 2 1]}, ...
%     {'ClgSP', [2 1 0]}, ...
%     {'SupplyAirSP', [2 1 0]}, ...
%     {'ChwSP', [3 2 1 0]}};

model_inputs(1).oed.ramped.se.d7 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).oed.ramped.se.d14 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};
%}

model_inputs(1).oed.ramped.se.d21 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};

%{
model_inputs(1).oed.ramped.truong.d3 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).oed.ramped.truong.d4 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};
%}
%{
model_inputs(1).oed.ramped.truong.d7 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [2 1 0]}, ...
    {'SupplyAirSP', [3 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};

    
model_inputs(1).oed.ramped.truong.d14 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};
%}

model_inputs(1).oed.ramped.truong.d21 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 1]}, ...
    {'Humidity', [0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


%{
model_inputs(1).uniform.unconstrained.se.d3 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).uniform.unconstrained.se.d4 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).uniform.unconstrained.se.d7 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).uniform.unconstrained.se.d14 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).uniform.unconstrained.truong.d3 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).uniform.unconstrained.truong.d4 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};
%}
%{
model_inputs(1).uniform.unconstrained.truong.d7 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 0]}, ...
    {'Humidity', [3 1]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [2 1 0]}, ...
    {'SupplyAirSP', [1 0]}, ...
    {'ChwSP', [3 1 0]}};


model_inputs(1).uniform.unconstrained.truong.d14 = {...
    'TOD', 'DOW', ...
    {'Ambient', [2 1 0]}, ...
    {'Humidity', [3 1]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).uniform.ramped.se.d3 = {...
    'TOD', 'DOW', ... % {'Ambient', [3 2 1]}, ...
    {'Humidity', [0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [1 0]}, ...
    {'SupplyAirSP', [3 1 0]}, ...
    {'ChwSP', [3 1 0]}};


model_inputs(1).uniform.ramped.se.d4 = {...
    'TOD', 'DOW', ... % {'Ambient', [1 0]}, ... {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 1 0]}, ...
    {'SupplyAirSP', [1 0]}, ...
    {'ChwSP', [3 1 0]}};


model_inputs(1).uniform.ramped.se.d7 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 0]}, ...
    {'Humidity', [3 1]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [2 1 0]}, ...
    {'SupplyAirSP', [3 1 0]}, ...
    {'ChwSP', [3 1 0]}};


model_inputs(1).uniform.ramped.se.d14 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 0]}, ...
    {'Humidity', [3]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [2 1 0]}, ...
    {'SupplyAirSP', [1 0]}, ...
    {'ChwSP', [3 1 0]}};


model_inputs(1).uniform.ramped.se.d21 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).uniform.ramped.se.d28 = {...
    'TOD', 'DOW', ...
    {'Ambient', [2 0]}, ...
    {'Humidity', [3 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [2 1 0]}, ...
    {'SupplyAirSP', [3 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).uniform.ramped.truong.d3 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3]}, ...
    {'Humidity', [1]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 1 0]}, ...
    {'SupplyAirSP', [3 0]}, ...
    {'ChwSP', [3 0]}};


model_inputs(1).uniform.ramped.truong.d4 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2]}, ...
    {'Humidity', [0]}, ...
    {'TotalLoad', [2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 0]}, ...
    {'ChwSP', [3 2 0]}};


model_inputs(1).uniform.ramped.truong.d7 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};
%}
%% Current
model_inputs(1).uniform.ramped.truongiso.d14 = {...
    'TOD', 'DOW', ...
    {'Ambient', [2 0]}, ...
    {'Humidity', [3]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'LgtSP', [3 1 0]}, ...
    {'ClgSP', [3 1 0]}, ...
    {'SupplyAirSP', [3 2 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).oed.ramped.truongiso.d14 = {...
    'TOD', 'DOW', ...
    {'Ambient', [2 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'LgtSP', [3 2 1 0]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};

%{
model_inputs(1).uniform.ramped.truong.d14 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};
%}

model_inputs(1).uniform.ramped.truong.d21 = {...
    'TOD', 'DOW', ...
    {'Ambient', [1 0]}, ...
    {'Humidity', [0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).uniform.ramped.truongiso.d21 = {...
    'TOD', 'DOW', ...
    {'Ambient', [1 0]}, ...
    {'Humidity', [0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'LgtSP', [3 1 0]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


%{
model_inputs(1).uniform.ramped.truong.d28 = {...
    'TOD', 'DOW', ...
    {'Ambient', [1 0]}, ...
    {'Humidity', [1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).prbs.unconstrained.se.d3 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).prbs.unconstrained.se.d4 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).prbs.unconstrained.se.d7 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).prbs.unconstrained.se.d14 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).prbs.unconstrained.truong.d3 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).prbs.unconstrained.truong.d4 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).prbs.unconstrained.truong.d7 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).prbs.unconstrained.truong.d14 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).prbs.ramped.se.d3 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};

model_inputs(1).prbs.ramped.se.d4 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).prbs.ramped.se.d7 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).prbs.ramped.se.d14 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).prbs.ramped.truong.d3 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).prbs.ramped.truong.d4 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).prbs.ramped.truong.d7 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};


model_inputs(1).prbs.ramped.truong.d14 = {...
    'TOD', 'DOW', ...
    {'Ambient', [3 2 1 0]}, ...
    {'Humidity', [3 2 1 0]}, ...
    {'TotalLoad', [3 2 1]}, ...
    {'ClgSP', [3 2 1 0]}, ...
    {'SupplyAirSP', [3 2 1 0]}, ...
    {'ChwSP', [3 2 1 0]}};
%}

save feature_selection_LargeOffice.mat model_inputs

%% Run the training and testing
for stepsahead = 0:0
    my_model_inputs = model_inputs(stepsahead+1).(select_training_type).(select_constraint_type).(select_kernel_type).(select_trainingdays);

    model_target = 'TotalLoad';
    model_excepts = {'TOD', 'DOW'};
    
    [Xtrain_norm, Ytrain_norm] = construct_data(data_train_norm, my_model_inputs, model_target, stepsahead, model_excepts);
    nInputs = size(Xtrain_norm, 2);  

    switch select_kernel_type
        case 'se'
            % SE-ARD
            model = struct;
            model.covariance_function = 'covSEard';
            model.mean_function = 'meanConst';
            model.likelihood = 'likGauss';
            
        case 'truong'
            % Truong's kernel (with TOD and DOW)
            model = struct;
            model.covariance_function = {'covProd', {{'covSum', {'covConst', {'covMask', {3:nInputs, 'covSEard'}}}}, {'covMask', {1:2, 'covRQard'}}}};
            model.mean_function = 'meanConst';
            model.likelihood = 'likGauss';
            
        case 'truongiso'
            % Truong's kernel (with TOD and DOW) and with RQiso
            model = struct;
            model.covariance_function = {'covProd', {{'covSum', {'covConst', {'covMask', {3:nInputs, 'covSEard'}}}}, {'covMask', {1:2, 'covRQiso'}}}};
            model.mean_function = 'meanConst';
            model.likelihood = 'likGauss';
            
        otherwise
            error('Unknown kernel type: %s', select_kernel_type);
    end
    
    %{
    % Assign prior (for OED)
    nD = size(Xtrain_norm, 2);
    model.prior = struct;
    model.prior.cov = repmat({{'priorGauss', 0, 1}}, gpml_numhyps(model.covariance_function, nD), 1);
    model.prior.mean = repmat({{'priorGauss', 0, 1}}, gpml_numhyps(model.mean_function, nD), 1);
    model.prior.lik = repmat({{'priorGauss', 0, 1}}, gpml_numhyps(model.likelihood, nD), 1);
    %}
    
    hyp0 = struct;
    %hyp0 = load('feature_selection/random_sampling_uniform_3input_ahead00_14days_final', 'training_result');
    %hyp0 = hyp0.training_result.hyp;
    %hyp0.cov(hyp0.cov > 10) = [];
    
    %{
    hypnames = [arrayfun(@(d) ['y', num2str(d)], lag_y, 'UniformOutput', false),...
        arrayfun(@(d) ['u', num2str(d)], lag_dr, 'UniformOutput', false),...
        arrayfun(@(d) ['Ta', num2str(d)], lag_Ta, 'UniformOutput', false),...
        arrayfun(@(d) ['h', num2str(d)], lag_humid, 'UniformOutput', false),...
        {'t', 'sf'}]';
    %}
    

    training_result = struct;
    training_result.stepsahead = stepsahead;
    %training_result.hypnames = hypnames;
    training_result.model_inputs = my_model_inputs;
    training_result.model_target = model_target;
    training_result.model_excepts = model_excepts;
    
    [training_result.hyp, training_result.flogtheta, training_result.model] = control_train_gpml(Xtrain_norm, Ytrain_norm, model, hyp0,...
        @minimize_minfunc, -100);
    
    % Validate by performing 1-step predictions, then compute several measures
    % compared to the real outputs
    [Xtest_norm, ~] = construct_data(data_test_norm, my_model_inputs, model_target, stepsahead, model_excepts);
    [~, Ytest] = construct_data(data_test, my_model_inputs, model_target, stepsahead, model_excepts);
    
    validation_result = control_validation_gpml(training_result.model, training_result.hyp, ...
        Xtrain_norm, Ytrain_norm, Xtest_norm, Ytest, normparams.(model_target).min, normparams.(model_target).max);
    
    matfilename = fullfile('feature_selection_LargeOffice', sprintf('%s_ahead%02d_%s', data_train_type, stepsahead, postfix));  % 'feature_selection', 
    save(matfilename, 'training_result', 'validation_result', 'normparams', 'Xtrain_norm', 'Ytrain_norm'); 
end